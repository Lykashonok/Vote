@model Vote.Forms.VoteForm
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

<link rel="stylesheet" href="~/css/ordinaryForm.css">
<link href="~/css/site.css" rel="stylesheet" />
<div class="form__container">
    <div class="form">
        <div class="form__title">@Localizer["form"]</div>
        <form asp-controller="Vote" asp-action="Index" method="post">
            <div asp-validation-summary="All"></div>
            <div class="form__fields">
                <span class="form__error" asp-validation-for="PhoneNumber"></span>
                <label>@Localizer["tel"]</label>
                <div class="form__field">
                    <input asp-for="PhoneNumber" value="@Model.PhoneNumber" type="text" id="phone" placeholder="@Localizer["tel"]">
                </div>

                <label>@Localizer["Place"]</label>
                <div class="form__field">
                    <select id="select-region" asp-items="@ViewBag.Places"></select>
                </div>
                <div class="form__field">
                    <select id="select-town"></select>
                </div>
                <div class="form__field">
                    <select id="select-street"></select>
                </div>
                <div class="form__field">
                    <select id="select-house" asp-for="Place"></select>
                </div>
                <label>@Localizer["Target"]</label>
                <div class="form__field">
                    <select id="select-region" asp-for="Target" asp-items="@ViewBag.Targets"></select>
                </div>
            </div>
            <div class="form__submit">
                <button class="nice-button" type="submit">@Localizer["Vote"]</button>
            </div>
        </form>
    </div>
</div>

<script>
    let select_items = [
        {
            "field": "Region",
            "item": document.getElementById("select-region"),
            "status": true,
        },
        {
            "field": "Town",
            "item": document.getElementById("select-town"),
            "status": false,
        },
        {
            "field": "Street",
            "item": document.getElementById("select-street"),
            "status": false,
        },
        {
            "field": "House",
            "item": document.getElementById("select-house"),
            "status": false,
        }
    ]
    for (let select of select_items) {
        select.item.style.display = select.status ? "block" : "none";
        select.item.onchange = (selected) => {
            let text = selected.target.options[selected.target.selectedIndex].text;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetVotePlacesForSelect", "Vote")',
                accept: 'application/json',
                data: {
                    "field": select.field,
                    "text": text
                },
                success: function (places) {
                    if (select_items[select_items.indexOf(select) + 1]) {
                        select_items[select_items.indexOf(select) + 1].status = true;
                        select_items[select_items.indexOf(select) + 1].item.innerHTML = '';
                        for (let place of places) {
                            let opt = document.createElement('option');
                            opt.value = place.value;
                            opt.innerHTML = place.text;
                            select_items[select_items.indexOf(select) + 1].item.appendChild(opt);
                        }
                        for (let select_inner of select_items) {
                            select_inner.item.style.display = select_inner.status ? "block" : "none";
                        }
                        select_items[select_items.indexOf(select) + 1].item.dispatchEvent(new Event("change"));
                    }
                }
            });
        }
    }
    //const hubConnection = new signalR.HubConnectionBuilder()
    //    .withUrl("/getStat")
    //    .build();

    //hubConnection.on("Send", function (data) {
    //    drawCharts();
    //});

    //document.getElementById("sendBtn").addEventListener("click", function (e) {
    //    let message = document.getElementById("message").value;
    //    hubConnection.invoke("Send", message);
    //});

    //hubConnection.start();
    select_items[0].item.dispatchEvent(new Event("change"));
</script>

@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation/dist/localization/ru.messages.js"></script>
}

<script src="~/js/site.js" asp-append-version="true"></script>